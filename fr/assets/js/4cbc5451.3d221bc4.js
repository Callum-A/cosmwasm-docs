"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5351],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(f,s(s({ref:t},l),{},{components:n})):r.createElement(f,s({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2169:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return l},default:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],i={sidebar_position:6},c="Events",p={unversionedId:"smart-contracts/events",id:"smart-contracts/events",title:"Events",description:"Most entry point functions return a type of Result.",source:"@site/docs/04-smart-contracts/06-events.md",sourceDirName:"04-smart-contracts",slug:"/smart-contracts/events",permalink:"/fr/docs/1.0/smart-contracts/events",editUrl:"https://github.com/InterWasm/docs/edit/main/docs/04-smart-contracts/06-events.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"docsSidebar",previous:{title:"Query",permalink:"/fr/docs/1.0/smart-contracts/query"},next:{title:"Math",permalink:"/fr/docs/1.0/smart-contracts/math"}},l=[],u={toc:l};function d(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"events"},"Events"),(0,o.kt)("p",null,"Most entry point functions return a type of ",(0,o.kt)("inlineCode",{parentName:"p"},"Result<Response, ContractError>"),"."),(0,o.kt)("p",null,"Within this, ",(0,o.kt)("inlineCode",{parentName:"p"},"Response")," is a wrapper around ",(0,o.kt)("a",{parentName:"p",href:"https://docs.cosmos.network/v0.42/core/events.html"},"Events")," in the Cosmos\nSDK."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Response")," type should be returned as the successful result of a contract entry point (i.e. ",(0,o.kt)("inlineCode",{parentName:"p"},"instantiate"),"\nor ",(0,o.kt)("inlineCode",{parentName:"p"},"execute"),"). You can declare it as mutable and add to it in the function body, but a more common pattern is to\nconstruct it at the end and return it, if all computation has succeeded. In the examples that follow, it is wrapped\nby ",(0,o.kt)("inlineCode",{parentName:"p"},"Ok")," as it is being returned as part of a function that is returning the ",(0,o.kt)("inlineCode",{parentName:"p"},"Result")," type, with ",(0,o.kt)("inlineCode",{parentName:"p"},"Response")," representing\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"Right")," or success branch."),(0,o.kt)("p",null,"The exception to this is ",(0,o.kt)("inlineCode",{parentName:"p"},"query"),", which will return ",(0,o.kt)("inlineCode",{parentName:"p"},"StdResult<Binary>")," due to the Cosmos SDK interface."),(0,o.kt)("p",null,"The source for Response\ncan ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/CosmWasm/cosmwasm/blob/main/packages/std/src/results/response.rs#L65"},"help to understand it better"),"\n."),(0,o.kt)("p",null,"The most simple usage of ",(0,o.kt)("inlineCode",{parentName:"p"},"Response")," is as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},"Ok(Response::default ())\n")),(0,o.kt)("p",null,"This is common\nin ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/CosmWasm/cw-plus/blob/main/contracts/cw20-base/src/contract.rs#L151"},"instantiate functions"),",\nwhere no message is returned to the client."),(0,o.kt)("p",null,"However, in most ",(0,o.kt)("inlineCode",{parentName:"p"},"execute")," handling cases, a ",(0,o.kt)("inlineCode",{parentName:"p"},"Response")," should be returned:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'let res = Response::new()\n.add_attribute("action", "transfer")\n.add_attribute("from", info.sender)\n.add_attribute("to", recipient)\n.add_attribute("amount", amount);\nOk(res)\n')),(0,o.kt)("p",null,"There's a bit more going on here, so let's unpack it. You can find the\nsource ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/CosmWasm/cw-plus/blob/main/contracts/cw20-base/src/contract.rs#L239"},"here"),"."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"A new ",(0,o.kt)("inlineCode",{parentName:"li"},"Response")," is created"),(0,o.kt)("li",{parentName:"ol"},"Several key/value pairs are added"),(0,o.kt)("li",{parentName:"ol"},"This is returned wrapped in a ",(0,o.kt)("inlineCode",{parentName:"li"},"Result")," type using ",(0,o.kt)("inlineCode",{parentName:"li"},"Ok"))),(0,o.kt)("p",null,"If you're calling your contract via the command-line interface (CLI) you will see them logged as part of the ",(0,o.kt)("inlineCode",{parentName:"p"},'"raw_log"'),"\nresponse, alongside other SDK events."),(0,o.kt)("p",null,"Instead of just adding attributes, ",(0,o.kt)("inlineCode",{parentName:"p"},".add_event")," can be used to add an unwrapped event."),(0,o.kt)("p",null,"These events can be interacted with by other clients or contracts."))}d.isMDXComponent=!0}}]);