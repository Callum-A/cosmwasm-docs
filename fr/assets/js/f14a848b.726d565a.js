"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6705],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=u(n),f=o,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||a;return n?r.createElement(m,i(i({ref:t},l),{},{components:n})):r.createElement(m,i({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8627:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return p}});var r=n(3117),o=n(102),a=(n(7294),n(3905)),i=["components"],s={id:"cw20-staking",sidebar_position:5,title:"CW20 Staking"},c="CW20 Staking",u={unversionedId:"cw20-staking",id:"cw20-staking",title:"CW20 Staking",description:"Source code is at cw20-staking.",source:"@site/cw-tokens/cw20-staking.md",sourceDirName:".",slug:"/cw20-staking",permalink:"/fr/cw-tokens/cw20-staking",editUrl:"https://github.com/InterWasm/docs/edit/main/cw-tokens/cw20-staking.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"cw20-staking",sidebar_position:5,title:"CW20 Staking"},sidebar:"cwPlus",previous:{title:"CW20 Merkle Airdrop",permalink:"/fr/cw-tokens/cw20-merkle-airdrop"},next:{title:"CW20 Streams",permalink:"/fr/cw-tokens/cw20-streams"}},l={},p=[{value:"Functionality",id:"functionality",level:2}],d={toc:p};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cw20-staking"},"CW20 Staking"),(0,a.kt)("p",null,"Source code is at ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/CosmWasm/cw-tokens/tree/main/contracts/cw20-staking"},"cw20-staking"),"."),(0,a.kt)("p",null,"This is a sample contract that releases a minimal form of staking derivatives. This is to be used for integration tests\nand as a foundation for other to build more complex logic upon."),(0,a.kt)("h2",{id:"functionality"},"Functionality"),(0,a.kt)("p",null,'On one side, this acts as a cw20 token, holding a list of balances for multiple addresses, and exposing queries and\ntransfers (no allowances and "transfer from" to focus the logic on the staking stuff). However, it has no initial\nbalance. Instead, it mints and burns them based on delegations.'),(0,a.kt)("p",null,'For such a "bonding curve" we expose two additional message types. A "bond"\nmessage sends native staking tokens to the contract to be bonded to a validator and credits the user with the\nappropriate amount of derivative tokens. Likewise you can burn some of your derivative tokens, and the contract will\nunbond the proportional amount of stake to the user\'s account (after typical 21-day unbonding period).'),(0,a.kt)("p",null,"To show an example of charging for such a service, we allow the contract owner to take a small exit tax, thus maybe 98%\nof the tokens will be unbonded and sent to the original account, and 2% of the tokens are not unbonded, but rather\ntransferred to the owners account. (The ownership can also be transferred)."))}f.isMDXComponent=!0}}]);